---

- name: "get kernel commit details"
  run_once: yes
  set_fact:
    kernel_commits: "{{ lookup('url', 'https://api.github.com/repos/sakaki-/bcm2711-kernel/commits') }}"
  tags: get_kernel_version

- name: "get commits from sha"
  set_fact:
    matching_commits: '{{ (kernel_commits|selectattr("sha","equalto",kernel_version))|list }}'
  tags: get_kernel_version

- name: "get commits from version"
  set_fact:
    matching_commits: '{{ (kernel_commits|selectattr("commit.message","match","^Update for release "+kernel_version))|list }}'
  when: matching_commits is not defined or matching_commits|count==0
  tags: get_kernel_version

- name: "fail if no matching commits found"
  fail:
    msg: "No kernel could be found matching {{kernel_version}}"
  when: matching_commits is not defined or matching_commits|count==0
  tags: get_kernel_version

- name: "select matching commit"
  set_fact:
    matching_commit: '{{matching_commits[0]}}'
  tags: get_kernel_version

- name: "set requested kernel details"
  set_fact:
    kernel_sha: '{{ matching_commit.sha }}'
  tags: get_kernel_version

- debug:
    verbosity: 3
    msg:
      - "%kernel_commits%: {{kernel_commits}}"
      - "%matching_commit%: {{matching_commit}}"
      - "%kernel_version%: {{ kernel_version }}"
  tags: get_kernel_version

- name: "set requested kernel details"
  set_fact:
    requested_kernel_sha: '{{ matching_commit.sha }}'
    kernel_version: "{{ matching_commit.commit.message.splitlines()[0] | regex_replace('^Update for release ([0-9]+\\.[0-9]+\\.[0-9]+).*','\\1')}}"
  tags: get_kernel_version

- name: "set paths"
  run_once: yes
  set_fact:
    kernel_url: "https://github.com/sakaki-/bcm2711-kernel/releases/download/{{ kernel_version }}/bcm2711-kernel-{{ kernel_version }}.tar.xz"
    kernel_tar_path: "/tmp/bcm2711-kernel-{{ kernel_version }}.tar.xz"
  tags: get_kernel_version
    
- debug:
    verbosity: 3
    msg:
      - "%kernel_sha%: {{kernel_sha}}"
      - "%requested_kernel_sha%: {{requested_kernel_sha}}"
      - "%kernel_version%: {{ kernel_version }}"
      - "%kernel_url%: {{ kernel_url }}"
      - "%kernel_tar_path%: {{ kernel_tar_path }}"
  tags: get_kernel_version

- name: "get kernel tar"
  run_once: yes
  delegate_to: 127.0.0.1
  get_url:
    url: "{{ kernel_url }}"
    dest: "{{ kernel_tar_path }}"

- name: "is kernel installed"
  become: yes
  register: kernel_modules
  find:
    paths: /lib/modules
    patterns: "{{ kernel_version }}-v8-*-p4+"
    file_type: directory
    recurse: no
  failed_when: kernel_modules.matched > 1

%%% NOPE! - /boot in tar needs to go to /boot/firmware
- name: "extract kernel to target"
  register: kernel_extract
  become: yes
  unarchive:
    remote_src: no
    src: "{{ kernel_tar_path }}"
    dest: "/"
  when: kernel_modules.matched == 0

%%% NOPE! - need to first comment out any exiting kernel=... that _isnt_ kernel8-p4.img
- name: 'add or update kernel in config.txt'
  become: yes
  register: config_kernel
  lineinfile:
    path: "{{ config_txt_path }}"
    line: 'kernel=kernel8-p4.img'
    state: present
    create: no
