---

- name: 'hold ubuntu packages which cant upgrade on pi'
  block:
    - name: 'Get held packages'
      become: yes
      command: apt-mark showhold
      register: held_packages
      changed_when: false

    - name: 'hold linux-firmware'
      become: yes
      command: apt-mark hold linux-firmware
      when: '"linux-firmware" not in held_packages.stdout'

    - name: 'hold flash-kernel'
      become: yes
      command: apt-mark hold flash-kernel
      when: '"flash-kernel" not in held_packages.stdout'

#    - name: hold initramfs-tools
#      become: yes
#      command: apt-mark hold initramfs-tools
#      when: '"initramfs-tools" not in held_packages.stdout'
#
#    - name: 'hold linux-raspi2'
#      become: yes
#      command: apt-mark hold linux-raspi2
#      when: '"linux-raspi2" not in held_packages.stdout'
#
#    - name: 'hold linux-image-raspi2'
#      become: yes
#      command: apt-mark hold linux-image-raspi2
#      when: '"linux-image-raspi2" not in held_packages.stdout'
#
#    - name: 'hold linux-headers-raspi2'
#      become: yes
#      command: apt-mark hold linux-headers-raspi2
#      when: '"linux-headers-raspi2" not in held_packages.stdout'
  when: is_ubuntu

- name: 'Upgrade all packages to the latest version'
  become: yes
  register: upgrade_result
  apt:
    force_apt_get: yes # there's no need to use aptitude
    update_cache: yes
    cache_valid_time: 3600 # Only run "update_cache=yes" if the last one is more than 3600 seconds ago
    name: "*"
    state: latest

- name: 'Remove dependencies that are no longer required'
  become: yes
  register: autoremove_result
  apt:
    force_apt_get: yes # there's no need to use aptitude
    autoremove: yes

# for ubuntu, this will have been performed earlier to support iscsi
- include_tasks: 'kernel_version_raspbian.yml'
  when: kernel_version is defined and is_raspbian
  tags: kernelversion

- debug:
    msg:
      - "%upgrade_result.changed%: {{ upgrade_result.changed }}"
      - "%autoremove_result.changed%: {{ autoremove_result.changed }}"
      - "%kernel_version_changed | default(False)%: {{ kernel_version_changed|default(False) }}"
      - "%kernel_version_changed%: {{ kernel_version_changed }}"
  tags: kernelversion

- name: 'reboot after updates'
  when: upgrade_result.changed or autoremove_result.changed or (kernel_version_changed|default(False))
  become: yes
  reboot:
  tags: kernelversion

