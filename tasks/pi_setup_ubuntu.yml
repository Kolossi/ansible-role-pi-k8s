---
#- name: 'disable ubuntu flash updates'
#  become: yes
#  file:
#    path: "/etc/initramfs/post-update.d/flash-kernel"
#    state: absent
#  tags: pi_setup

- name: 'uninstall ubuntu flash-kernel'
  become: yes
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: 'flash-kernel'
    state: absent
  tags: pi_setup

- name: 'uninstall unattended-upgrades'
  become: yes
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: 'unattended-upgrades'
    state: absent
  tags: pi_setup

- name: 'uninstall ubuntu-release-upgrader-core'
  become: yes
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: 'ubuntu-release-upgrader-core'
    state: absent
  tags: pi_setup

- name: 'install nfs-common'
  become: yes
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: 'nfs-common'
    state: present
  tags: pi_setup

- name: 'clear unneeded initramfs'
  become: yes
  shell:
    cmd: 'update-initramfs -d -k all'
  tags: pi_setup

# thanks https://www.mydailytutorials.com/ansible-delete-multiple-files-directories-ansible/
- block:
  - name: 'get old kernel files to clear'
    find:
      paths:
        - '/boot'
        - '/boot/firmware'
      patterns: '*-raspi2'
    register: kernel_files_to_clear
    tags: pi_setup

  - name: 'remove old kernel files'
    become: yes
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: "{{ kernel_files_to_clear.files }}"
    tags: pi_setup

# fix boot hang because of low entropy due to missing mouse
# thanks: https://www.linuxquestions.org/questions/debian-26/debian-hangs-at-boot-with-random-crng-init-done-4175613405/#post5889997
- name: "install haveged"
  become: yes
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: 'haveged'
    state: present
  tags: pi_setup

- name: "enable haveged"
  become: yes
  systemd:
    name: "haveged"
    enabled: yes
  tags: pi_setup
  
- name: "comment out previous kernel (including 32 bit armhf default) in config.txt"
  become: yes
  lineinfile:
    path: "{{ config_txt_path }}"
    regexp: '^((?<!#)kernel=(?!kernel8-p4\.img).*)'
    line: '#\1'
    backrefs: yes
    create: no
  tags: pi_setup

- name: 'add x64 kernel in config.txt'
  become: yes
  register: config_kernel
  lineinfile:
    path: "{{ config_txt_path }}"
    line: 'kernel=kernel8-p4.img'
    state: present
    create: no
  tags: pi_setup

- name: "set ntp server"
  when: ntp_servers is defined
  become: yes
  lineinfile:
    path: "/etc/systemd/timesyncd.conf"
    line: "NTP={{ ntp_servers }}"
    regexp: '^\s*#?\s*(NTP=).*$'
              
    insertafter: '\[Time\]'
    state: present
  register: ntp_service_result
  tags: pi_setup

- name: 'systemctl restart ntp'
  become: yes
  when: ntp_service_result.changed
  systemd:
    state: restarted
    name: systemd-timesyncd
    daemon_reload: yes
  tags: pi_setup

- name: "include kernel_version_ubuntu.yml"
  include_tasks: 'kernel_version_ubuntu.yml'
  when: kernel_version is defined
  tags: pi_setup,get_kernel_version,kernel_version
