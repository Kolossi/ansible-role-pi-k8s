---

- name: 'install tgt and nfs-kernel-server'
  become: yes
  register: apt_result
  retries: 3
  delay: 5
  until: apt_result is not failed
  apt:
    force_apt_get: yes # there's no need to use aptitude
    name: ['tgt', 'nfs-kernel-server']
    state: present
    update_cache: yes
    cache_valid_time: 3600 # Only run "update_cache=yes" if the last one is more than 3600 seconds ago
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- import_tasks: iscsi_initiatorname.yml
  tags: master_ssd_workdir

- name: "mount ssd device"
  become: yes
  mount:
    path: "{{ master_ssd_mount_path }}"
    src: "{{ master_ssd_device }}"
    fstype: ext4
    opts: defaults
    state: mounted
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- name: "make ssd blocks dir"
  become: yes
  file:
    path: "{{ master_ssd_mount_path }}/blocks"
    state: directory
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- name: "make master local workdir"
  become: yes
  file:
    path: "{{ master_ssd_mount_path }}/local_workdir"
    state: directory
    owner: nobody
    group: nogroup
    mode: '0777'
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- name: "make cluster workdir"
  become: yes
  file:
    path: "{{ master_ssd_mount_path }}/cluster_workdir"
    owner: nobody
    group: nogroup
    mode: '0777'
    state: directory
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- name: 'bind master local workdir'
  become: yes
  mount:
    src: "{{ master_ssd_mount_path }}/local_workdir"
    path: "{{ node_workdir_path }}"
    opts: bind
    fstype: none
    state: mounted
  when: inventory_hostname == target_masters[0]
  tags: master_ssd_workdir

- name: "make client workdir blocks file"
  become: yes
  register: blockfile_create
  file:
    path: "{{ master_ssd_mount_path }}/blocks/{{ inventory_hostname }}-workdir.img"
    state: touch
    modification_time: preserve
    access_time: preserve
  when: inventory_hostname != target_masters[0]
  delegate_to: "{{ target_masters[0] }}"
  tags: master_ssd_workdir
 
- name: "fill client workdir blocks file"
  become: yes
  command:
    cmd: "dd if=/dev/zero of={{ blockfile_create.dest }} bs=1M count={{ node_workdir_size_mb }} status=none"
  when: inventory_hostname != target_masters[0] and blockfile_create.changed
  delegate_to: "{{ target_masters[0] }}"
  tags: master_ssd_workdir

- name: "create iscsi target config"
  become: yes
  register: node_workdir_target_create
  template:
    src: "workdir_target.conf.j2"
    dest: "/etc/tgt/conf.d/{{ node_workdir_target | replace(':','.') }}"
  delegate_to: "{{ target_masters[0] }}"
  when: inventory_hostname != target_masters[0]
  tags: master_ssd_workdir

- name: "request tgt restart"
  set_fact:
    restart_tgt: yes
  delegate_to: "{{ target_masters[0] }}"
  when: inventory_hostname != target_masters[0] and (blockfile_create.changed or node_workdir_target_create.changed)
  tags: master_ssd_workdir

- name: "systemctl restart tgt"
  become: yes
  systemd:
    state: restarted
    name: tgt
    daemon_reload: yes
  when: inventory_hostname == target_masters[0] and (restart_tgt | default(False))
  tags: master_ssd_workdir

- name: 'create tmp in workdir'
  become: yes
  file:
    path: "{{ node_workdir_path }}/tmp"
    state: directory
    owner: nobody
    group: nogroup
    mode: '0777'
  tags: master_ssd_workdir

- name: 'create log in workdir'
  become: yes
  file:
    path: "{{ node_workdir_path }}/log"
    state: directory
    owner: nobody
    group: nogroup
    mode: '0777'
  tags: master_ssd_workdir

- name: 'bind /tmp to workdir'
  become: yes
  mount:
    src: "{{ node_workdir_path }}/tmp"
    path: /tmp
    opts: bind
    fstype: none
    state: mounted
  tags: master_ssd_workdir

- name: 'bind /var/log to workdir'
  become: yes
  mount:
    src: "{{ node_workdir_path }}/log"
    path: /var/log
    opts: bind
    fstype: none
    state: mounted
  tags: master_ssd_workdir
